<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Method name is - verifyWithValidCredentials]]>
    </line>
    <line>
      <![CDATA[Method name is - verifyIfErrorMessageIsDisplayedForInvalidPassword]]>
    </line>
    <line>
      <![CDATA[Status of execution is - 1]]>
    </line>
    <line>
      <![CDATA[Method name is - verifyIfUserIsableToRegisterUsingMyAccountRegisterButton]]>
    </line>
    <line>
      <![CDATA[Status of execution is - 1]]>
    </line>
    <line>
      <![CDATA[Method name is - verifyIfUserIsableToRegisterFromNewCustomerPage]]>
    </line>
    <line>
      <![CDATA[Status of execution is - 1]]>
    </line>
    <line>
      <![CDATA[Method name is - verifyIfUserDisplayedErrorMsgWhenDetailsNotEntered]]>
    </line>
    <line>
      <![CDATA[Status of execution is - 1]]>
    </line>
    <line>
      <![CDATA[Method name is - addToCartDesktopPcTest]]>
    </line>
    <line>
      <![CDATA[Status of execution is - 1]]>
    </line>
    <line>
      <![CDATA[Method name is - addToCartDesktopMacTest]]>
    </line>
    <line>
      <![CDATA[Status of execution is - 1]]>
    </line>
    <line>
      <![CDATA[Method name is - verifyIfSearchItemIsDisplayed]]>
    </line>
    <line>
      <![CDATA[Status of execution is - 1]]>
    </line>
    <line>
      <![CDATA[Method name is - verifyIfSearchItemIsDisplayed]]>
    </line>
    <line>
      <![CDATA[Status of execution is - 1]]>
    </line>
    <line>
      <![CDATA[Method name is - verifyIfSearchItemIsDisplayed]]>
    </line>
    <line>
      <![CDATA[Status of execution is - 1]]>
    </line>
  </reporter-output>
  <suite started-at="2023-10-20T11:34:50 IST" name="Suite1" finished-at="2023-10-20T11:36:04 IST" duration-ms="73496">
    <groups>
    </groups>
    <test started-at="2023-10-20T11:34:50 IST" name="Test1" finished-at="2023-10-20T11:36:04 IST" duration-ms="73496">
      <class name="testcase.Desktop">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcase.Desktop@57a3e26a]" started-at="2023-10-20T11:35:29 IST" name="setUp" finished-at="2023-10-20T11:35:32 IST" duration-ms="2544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addToCartDesktopPcTest()[pri:1, instance:testcase.Desktop@57a3e26a]" started-at="2023-10-20T11:35:32 IST" name="addToCartDesktopPcTest" finished-at="2023-10-20T11:35:40 IST" duration-ms="8422" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Method name is - addToCartDesktopPcTest]]>
            </line>
            <line>
              <![CDATA[Status of execution is - 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- addToCartDesktopPcTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcase.Desktop@57a3e26a]" started-at="2023-10-20T11:35:40 IST" name="afterTest" finished-at="2023-10-20T11:35:40 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcase.Desktop@57a3e26a]" started-at="2023-10-20T11:35:40 IST" name="setUp" finished-at="2023-10-20T11:35:45 IST" duration-ms="4230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addToCartDesktopMacTest()[pri:2, instance:testcase.Desktop@57a3e26a]" started-at="2023-10-20T11:35:45 IST" name="addToCartDesktopMacTest" finished-at="2023-10-20T11:35:45 IST" duration-ms="625" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Method name is - addToCartDesktopMacTest]]>
            </line>
            <line>
              <![CDATA[Status of execution is - 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- addToCartDesktopMacTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcase.Desktop@57a3e26a]" started-at="2023-10-20T11:35:45 IST" name="afterTest" finished-at="2023-10-20T11:35:46 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testcase.Desktop -->
      <class name="testcase.Register">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcase.Register@4b2c5e02]" started-at="2023-10-20T11:35:11 IST" name="setUp" finished-at="2023-10-20T11:35:14 IST" duration-ms="3228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyIfUserIsableToRegisterUsingMyAccountRegisterButton()[pri:1, instance:testcase.Register@4b2c5e02]" started-at="2023-10-20T11:35:14 IST" name="verifyIfUserIsableToRegisterUsingMyAccountRegisterButton" finished-at="2023-10-20T11:35:16 IST" duration-ms="1692" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Method name is - verifyIfUserIsableToRegisterUsingMyAccountRegisterButton]]>
            </line>
            <line>
              <![CDATA[Status of execution is - 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyIfUserIsableToRegisterUsingMyAccountRegisterButton -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcase.Register@4b2c5e02]" started-at="2023-10-20T11:35:16 IST" name="afterTest" finished-at="2023-10-20T11:35:16 IST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcase.Register@4b2c5e02]" started-at="2023-10-20T11:35:16 IST" name="setUp" finished-at="2023-10-20T11:35:22 IST" duration-ms="5956" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyIfUserIsableToRegisterFromNewCustomerPage()[pri:2, instance:testcase.Register@4b2c5e02]" started-at="2023-10-20T11:35:22 IST" name="verifyIfUserIsableToRegisterFromNewCustomerPage" finished-at="2023-10-20T11:35:25 IST" duration-ms="3186" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Method name is - verifyIfUserIsableToRegisterFromNewCustomerPage]]>
            </line>
            <line>
              <![CDATA[Status of execution is - 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyIfUserIsableToRegisterFromNewCustomerPage -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcase.Register@4b2c5e02]" started-at="2023-10-20T11:35:25 IST" name="afterTest" finished-at="2023-10-20T11:35:26 IST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcase.Register@4b2c5e02]" started-at="2023-10-20T11:35:26 IST" name="setUp" finished-at="2023-10-20T11:35:28 IST" duration-ms="2568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyIfUserDisplayedErrorMsgWhenDetailsNotEntered()[pri:3, instance:testcase.Register@4b2c5e02]" started-at="2023-10-20T11:35:28 IST" name="verifyIfUserDisplayedErrorMsgWhenDetailsNotEntered" finished-at="2023-10-20T11:35:29 IST" duration-ms="870" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Method name is - verifyIfUserDisplayedErrorMsgWhenDetailsNotEntered]]>
            </line>
            <line>
              <![CDATA[Status of execution is - 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyIfUserDisplayedErrorMsgWhenDetailsNotEntered -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcase.Register@4b2c5e02]" started-at="2023-10-20T11:35:29 IST" name="afterTest" finished-at="2023-10-20T11:35:29 IST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testcase.Register -->
      <class name="testcase.Search">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcase.Search@6531a794]" started-at="2023-10-20T11:35:46 IST" name="setUp" finished-at="2023-10-20T11:35:48 IST" duration-ms="2441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyIfSearchItemIsDisplayed(java.lang.String)[pri:0, instance:testcase.Search@6531a794]" started-at="2023-10-20T11:35:48 IST" name="verifyIfSearchItemIsDisplayed" data-provider="searchData" finished-at="2023-10-20T11:35:56 IST" duration-ms="8498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dell]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Method name is - verifyIfSearchItemIsDisplayed]]>
            </line>
            <line>
              <![CDATA[Status of execution is - 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyIfSearchItemIsDisplayed -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcase.Search@6531a794]" started-at="2023-10-20T11:35:56 IST" name="afterTest" finished-at="2023-10-20T11:35:57 IST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcase.Search@6531a794]" started-at="2023-10-20T11:35:57 IST" name="setUp" finished-at="2023-10-20T11:36:00 IST" duration-ms="2965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyIfSearchItemIsDisplayed(java.lang.String)[pri:0, instance:testcase.Search@6531a794]" started-at="2023-10-20T11:36:00 IST" name="verifyIfSearchItemIsDisplayed" data-provider="searchData" finished-at="2023-10-20T11:36:00 IST" duration-ms="611" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[HP]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Method name is - verifyIfSearchItemIsDisplayed]]>
            </line>
            <line>
              <![CDATA[Status of execution is - 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyIfSearchItemIsDisplayed -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcase.Search@6531a794]" started-at="2023-10-20T11:36:00 IST" name="afterTest" finished-at="2023-10-20T11:36:01 IST" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcase.Search@6531a794]" started-at="2023-10-20T11:36:01 IST" name="setUp" finished-at="2023-10-20T11:36:03 IST" duration-ms="2724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyIfSearchItemIsDisplayed(java.lang.String)[pri:0, instance:testcase.Search@6531a794]" started-at="2023-10-20T11:36:03 IST" name="verifyIfSearchItemIsDisplayed" data-provider="searchData" finished-at="2023-10-20T11:36:04 IST" duration-ms="485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mac]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Method name is - verifyIfSearchItemIsDisplayed]]>
            </line>
            <line>
              <![CDATA[Status of execution is - 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyIfSearchItemIsDisplayed -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcase.Search@6531a794]" started-at="2023-10-20T11:36:04 IST" name="afterTest" finished-at="2023-10-20T11:36:04 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testcase.Search -->
      <class name="testcase.Login">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcase.Login@a1f72f5]" started-at="2023-10-20T11:34:51 IST" name="setUp" finished-at="2023-10-20T11:34:56 IST" duration-ms="5707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyWithValidCredentials()[pri:1, instance:testcase.Login@a1f72f5]" started-at="2023-10-20T11:34:56 IST" name="verifyWithValidCredentials" finished-at="2023-10-20T11:35:05 IST" duration-ms="8605" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div/h2[text()='My Account']"}
  (Session info: chrome=118.0.5993.88)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f54297a752ae96e05214412137662500, findElement {using=xpath, value=//div/h2[text()='My Account']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 118.0.5993.88, chrome: {chromedriverVersion: 118.0.5993.70 (e52f33f30b91..., userDataDir: C:\Users\Admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55964}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55964/devtoo..., se:cdpVersion: 118.0.5993.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f54297a752ae96e05214412137662500]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div/h2[text()='My Account']"}
  (Session info: chrome=118.0.5993.88)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f54297a752ae96e05214412137662500, findElement {using=xpath, value=//div/h2[text()='My Account']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 118.0.5993.88, chrome: {chromedriverVersion: 118.0.5993.70 (e52f33f30b91..., userDataDir: C:\Users\Admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55964}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55964/devtoo..., se:cdpVersion: 118.0.5993.88, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f54297a752ae96e05214412137662500
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353)
at testcase.Login.verifyWithValidCredentials(Login.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[Method name is - verifyWithValidCredentials]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyWithValidCredentials -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcase.Login@a1f72f5]" started-at="2023-10-20T11:35:05 IST" name="afterTest" finished-at="2023-10-20T11:35:05 IST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcase.Login@a1f72f5]" started-at="2023-10-20T11:35:05 IST" name="setUp" finished-at="2023-10-20T11:35:08 IST" duration-ms="2745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyIfErrorMessageIsDisplayedForInvalidPassword()[pri:2, instance:testcase.Login@a1f72f5]" started-at="2023-10-20T11:35:08 IST" name="verifyIfErrorMessageIsDisplayedForInvalidPassword" finished-at="2023-10-20T11:35:11 IST" duration-ms="2987" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Method name is - verifyIfErrorMessageIsDisplayedForInvalidPassword]]>
            </line>
            <line>
              <![CDATA[Status of execution is - 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyIfErrorMessageIsDisplayedForInvalidPassword -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testcase.Login@a1f72f5]" started-at="2023-10-20T11:35:11 IST" name="afterTest" finished-at="2023-10-20T11:35:11 IST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testcase.Login -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite1 -->
</testng-results>
